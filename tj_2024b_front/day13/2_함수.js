/* 
js 함수 표현 방법
    1. 선언적 함수 : 선언 키워드 이용하여 함수를 정의하는 방법, function 함수명( ) {}
    2. 익명 함수 : 함수명이 없이 정의하는 방법, function( ){}, let 변수명 = function( ){}
    3. 화살표(람다식) 함수 : 선언 키워드와 함수명 없이 화살표 이용한 정의 방법, ( ) ->  { } , let 변수 = ( ) -> { }

js 함수의 함수명 카멜표기법 권장 ex) myCar
(매개변수1,매개변수2) : 함수가 실행될때 함수 안으로 들어오는 데이터를 저장하는 변수
{ } : 함수가 실행될때 처리할 명령어들의 구역

함수 호출 방법
    함수명(인자값, 인자값); : 지정한 함수명이 각 매개변수에 대입되고 실행 후 함수의 retrun 반환

for : 어떠한 코드의 순차적인 패턴이 존재할 때
함수 : 어떠한 코드의 재사용이 필요할 때, 미리 정의된 코드에 인자값(매개변수)에 따른 서로 다른 결과(리턴값) 얻을 수 있다

*/

function 내가만든함수() {}
    console.log('내가 처음 만든 함수 실행');

    내가만든함수();

function 함수1차(a, x, b) { //매개변수 - 함수 호출 시 함수 안에 대입할 인자값을 저장하는 변수
    let y = (a*x)+b
    return y;
}

let y1 = 함수1차 (1,2,3);

//믹서기 함수 : 과일 갈아서 만든 주스 믹서기
function 믹서기함수(과일) {
    let 결과 = 과일+'주스'
    return 결과
}

let 주스컵1 = 믹서기함수(사과);

